+++
title = "Theory"
weight = 4
chapter = false
+++

** "Throw" meaning explained
   :PROPERTIES:
   :CUSTOM_ID: throw-meaning-explained
   :END:

The Treefactor workflow is loosely based on
[[http://brainstormsw.com][Brainstorm]], a proprietary Windows
application about as old as Emacs. In Brainstorm, refiling text was
called a "throw", because one throws text to a location, like throwing a
ball.

Obligatory acknowledgment to programmers: The word "throw" has a
pre-existing Emacs meaning - "throw" is a built-in function in Emacs' C
source code. In general "throw" is coder jargon for an unrelated
concept. Please set it aside.

In both Brainstorm and Treefactor, throwing text is more like packing a
house for a move than putting files into a filing cabinet. When you
move, you throw your screwdrivers into the "garage" box, and later at
the destination you unpack the box and put the screwdrivers in their
final destination. This act of throwing the screwdrivers into the
"garage" box is an imprecise incomplete refiling. You finish the
refiling through a series of incremental steps. E.g. the box is carried
to the van, the van drives to the house, the boxes are unloaded, the box
is moved into the new garage, etc.

In traditional refiling, the item goes directly to its final
destination. This is like putting pieces of paper into a filing cabinet
full of folders. If you miss, it gets lost. For example, if you put your
dishwasher warranty into your Medical folder, you aren't likely to find
it again.

Imprecise inductive filing is more error-tolerant. If you put your
screwdriver with your silverware, you will probably notice the mistake
when unpacking the kitchen box.

What is it imprecise? When throwing objects with Treefactor, you usually
don't see exactly where they end up. For example, when throwing to a
file, you don't see the parent heading. When throwing to an outline, you
don't see the adjacent child headings. This is similar to throwing an
object into a box.

Imprecise refiles are handy because they require less thought. You don't
need to know anything more than the information currently on the screen
in order to "throw" the object in the right general direction. You don't
need to know the exact layout of your new house in order to put stuff in
the "garage" box.

An accumulation of imprecise refiles eventually results in precise
refiling, without the usual accompanying mental friction of one-step
precise refiling. The correct meta-outline structure is discovered
inductively and experimentally rather than deductively and
theoretically. By becoming protean, the meta outline need only meet the
priorities of the present, because it can evolve in response to future
needs.

In short, streamlining meta-outline evolution permits a 10x greater
daily text processing capacity. In evolutionary terms, this marks the
end of an era in personal information management. Bigger-brained bipeds
are an extinction event.

Usually, deciding where to throw an object is so easy it's almost
trivial. It's hard to believe something so small could amount to so
much. But supercomputers are only built of 1s and 0s, and the Sahara
from grains of sand.

Treefactor is the easiest way to impart the human intelligence to a
computer that it inherently lacks. It tells the computer: "This text
doesn't belong here, it goes thataway." Repeating this instruction at
scale makes the meta-outline a synchronized exobrain - a Textmind.
